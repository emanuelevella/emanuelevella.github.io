{"version":3,"sources":["assets/illustrations/stonks-illustration.svg","features/homeIntroduction/HomeIntroduction.js","helpers/themes.js","helpers/helpers.js","features/chart/Chart.js","app/api.js","features/select/Select.js","features/compareStock/CompareStock.js","pages/home/Home.js","pages/order/ordersSlice.js","assets/icons/edit.svg","features/toast/Toast.js","features/orderHistory/OrderHistory.js","features/selectStockToOrder/SelectStockToOrder.js","features/makeOrder/MakeOrder.js","pages/order/Order.js","pages/notFound/NotFound.js","assets/logo.svg","assets/avatar.png","features/toggle/switch/Switch.js","features/toggle/switchDarkMode/switchDarkModeSlice.js","features/toggle/switchDarkMode/SwitchDarkMode.js","features/burger/Burger.js","features/menu/Menu.js","features/navbar/Navbar.js","helpers/hooks.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","isMobile","ImageWrapper","Image","img","TextWrapper","Title","span","props","theme","text","Description","p","GradientText","HomeIntroduction","src","illustration","lightTheme","background","navbarColor","navbarBorder","menuFilter","burgerMenu","primaryDark","primaryLight","primaryHover","mobile","darkTheme","whiteStyleGrid","axis","stroke","axisLabel","fontSize","padding","fill","ticks","size","tickLabels","mapObjectToChartData","value","yearsForAxis","Set","data","historical","reduce","acc","curr","splitYear","date","split","stockDate","Date","push","x","y","close","add","getFullYear","tickValues","legend","symbol","mapArrayToChartDatas","arr","result","mappedItem","labels","index","forEach","yearsToDate","arrYears","map","year","getColorVictoryLine","Label","colorIndex","Chart","dataSet","useState","zoom","setZoom","brush","setBrush","VictoryZoomVoronoiContainer","createContainer","useEffect","VictoryTheme","material","width","height","scale","containerComponent","responsive","datum","toFixed","zoomDimension","zoomDomain","disable","length","onZoomDomainChange","dependentAxis","style","grid","dataset","Math","random","label","top","left","right","bottom","brushDimension","brushDomain","onBrushDomainChange","tickFormat","getStocksByName","input","fetch","process","REACT_APP_APIKEY","then","json","error","console","log","getStocksHistory","arrayOfStocksNames","stocks","stock","join","h1","alwaysDarkMode","Subtitle","h3","InputSelect","subtitle","search","onChange","isMultiSelect","isMulti","cacheOptions","defaultOptions","loadOptions","CompareStock","chartData","setChartData","searchByStockName","a","populateChart","stockHistory","newChartData","historicalStockList","inputValue","Home","ordersSlice","createSlice","name","initialState","pending","reducers","state","payload","toISOString","quantity","price","parseFloat","remove","edit","unitPrice","actions","selectPendingOrders","Array","from","Object","values","orders","Toast","position","HistoryWrapper","TableWrapper","table","Header","thead","Body","tbody","TableRow","tr","HeaderCol","th","BodyCol","td","EditWrapper","StyledEdiText","EdiText","OrderHistory","editing","setEditing","orderHistory","useSelector","dispatch","useDispatch","onSave","newStock","toast","type","e","startEditingOnFocus","submitOnUnfocus","validation","val","validationMessage","onClick","EditIcon","StockWrapper","SelectStockToOrder","onSelect","stockToOrder","setQuantityToOrder","setStockToOrder","lastDay","min","max","StockName","Row","Col","StatisticsWrapper","Category","Data","Change","change","BuyButton","MakeOrder","quantityToOrder","makeOrder","low","high","changePercent","ChartWrapper","OrderWrapping","BuyStock","role","Text","NotFound","SwitchInput","SwitchLabel","SwitchButton","Switch","id","toggled","className","checked","htmlFor","switchDarkModeSlice","isToggled","toggle","selectIsToggled","switchDarkMode","SwitchDarkMode","StyledBurger","button","open","Burger","setOpen","isExpanded","aria-label","aria-expanded","StyledMenu","nav","Avatar","TextHover","Menu","isHidden","aria-hidden","to","avatar","Logo","Buy","BurgerWrapper","Navbar","ref","handler","node","useRef","listener","event","current","contains","target","document","addEventListener","removeEventListener","logo","GlobalStyle","createGlobalStyle","App","exact","path","component","store","configureStore","reducer","switchDarkModeReducer","ordersReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6c553eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/stonks-illustration.69f93b1d.svg\";","import styled from 'styled-components'\nimport illustration from '../../assets/illustrations/stonks-illustration.svg'\nimport {isMobile} from 'react-device-detect';\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    min-height: 100vh;\n    display: flex;\n    flex-flow: ${isMobile ? 'row wrap' : ''};\n    flex-direction: row;\n    height: 85%;\n    align-items: center;\n    justify-content: center;\n    margin-left: auto;\n`\n\nconst ImageWrapper = styled.div`\n\n`\n\nconst Image = styled.img`\n    margin-right: ${isMobile ? 'auto' : '50px'};\n    transform: ${isMobile ? 'scale(0.4)' : 'scale(1)'};\n`\n\nconst TextWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-top: 10vh;\n    margin-left: 50px;\n    word-wrap: break-word;\n`\n\nconst Title = styled.span`\n    font-family: 'Fjalla One', sans-serif;    \n    overflow: hidden;\n    word-wrap:break-word;\n    font-size: 4rem;\n    color: ${ props => props.theme.text};\n`\n\nconst Description = styled.p`\n    font-family: 'Fjalla One', sans-serif;\n    font-size: 2rem;\n    color: ${ props => props.theme.text};\n`\n\nconst GradientText = styled.span`\n    background: linear-gradient(45deg, rgba(231,0,138,1) 0%, rgba(255,0,58,1) 100%);\n    background-clip: text;\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n\n`\n\nexport default function HomeIntroduction() {\n    return (\n        <Wrapper>\n            <TextWrapper>\n                <Title>Empower your finances thanks to <GradientText>Stonks</GradientText></Title>\n                <Description>Compare, see history and buy <GradientText>stocks</GradientText> in few simple steps.</Description>\n            </TextWrapper>\n            { !isMobile ? \n                <ImageWrapper>\n                    <Image src={illustration}/>\n                </ImageWrapper>\n                :\n                \"\"\n            }\n        </Wrapper>\n    )\n}","\nexport const lightTheme = {\n    background: \"white\",\n    navbarColor: \"white\",\n    navbarBorder: \"rgb(236, 239, 241)\",\n    text: \"rgba(47,47,66,255)\",\n    menuFilter: \"\",\n    burgerMenu: 'white',\n    primaryDark: '#0D0C1D',\n    primaryLight: '#EFFFFA',\n    primaryHover: '#343078',\n    mobile: '576px',\n  }\n  export const darkTheme = {\n    background: \"#141a2c\",\n    navbarColor: \"141a2c\",\n    navbarBorder: \"black\",\n    text: \"white\",\n    menuFilter: \"invert(1)\",\n    burgerMenu: '#121727',\n    primaryDark: '#0D0C1D',\n    primaryLight: '#EFFFFA',\n    primaryHover: '#343078',\n    mobile: '576px',\n  }\n\n  export const whiteStyleGrid = {\n    axis: { stroke: \"white\" },\n    axisLabel: { fontSize: 20, padding: 30, fill: \"white\" },\n    ticks: { stroke: \"white\", size: 5, },\n    tickLabels: { fontSize: 15, padding: 5, fill: \"white\" }\n    }\n\n    ","export const mapObjectToChartData = (value) => {\n    let result = []\n    let yearsForAxis = new Set()\n    result = value.historical.reduce((acc, curr) => { \n        const splitYear = curr.date.split(\"-\")\n        const stockDate = new Date(splitYear[0], splitYear[1], splitYear[2])\n        acc.push({ x: stockDate , y: curr.close })\n        yearsForAxis.add(stockDate.getFullYear())\n        return acc\n    }, [])\n    return { data: [result], tickValues: [...yearsForAxis], legend: [value.symbol] }\n}\n\nexport const mapArrayToChartDatas = (arr) => {\n    let result = []\n    let yearsForAxis = new Set()\n    let mappedItem = null\n    let labels = []\n    for(let index in arr) {\n        mappedItem = mapObjectToChartData(arr[index])\n        result[index] = mappedItem.data[0]\n        mappedItem.tickValues.forEach(yearsForAxis.add, yearsForAxis)\n        labels.push(...mappedItem.legend)\n    }\n    return { data: result, tickValues: [...yearsForAxis], legend: labels }\n}\n\nexport const yearsToDate = (arrYears) => arrYears.map(year => new Date(year, 1, 1))\n\n\nexport const getColorVictoryLine = (index) => {\n    switch(index) {\n        case 0: \n            return '#f50057'\n        case 1: \n            return '#00f5a3'\n        case 2: \n            return '#8300f5'\n        case 3: \n            return '#008bf5'\n        case 4: \n            return '#f5bc00'\n        default:\n            return ''\n    }\n}","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components'\nimport { createContainer, VictoryTheme, VictoryChart, VictoryBrushContainer, VictoryLine, VictoryAxis } from 'victory';\nimport { whiteStyleGrid } from '../../helpers/themes'\nimport { getColorVictoryLine } from '../../helpers/helpers'\nimport {isMobile} from 'react-device-detect';\n\n\nconst Wrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    height: 30px;\n`\n\nconst Label = styled.div`\n    margin-right: 10px;\n    border-top: 2px solid ${props => props.colorIndex};\n    color: white;\n    font-family: Roboto;\n`\n\nexport default function Chart ({ dataSet }) {\n    const [zoom, setZoom] = useState(null)\n    const [brush, setBrush] = useState(null)\n    const VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\")\n    let { data, tickValues, legend } = dataSet\n\n    useEffect(() => {\n        setZoom(null)\n    }, [data])\n\n    return (\n        <div>\n            <VictoryChart\n                theme={VictoryTheme.material}\n                width={isMobile ? 350 : 700}\n                height={300}\n                scale={{x: \"time\"}}\n                containerComponent={\n                    <VictoryZoomVoronoiContainer responsive={false}\n                        labels={({ datum }) => `${datum.y.toFixed(2)}$`}\n                        zoomDimension=\"x\"\n                        zoomDomain={zoom}\n                        disable={!data.length}\n                        onZoomDomainChange={setBrush}\n                    />\n                }\n                >\n                <VictoryAxis dependentAxis style={{\n                    axis: { stroke: \"white\" },\n                    grid: { stroke: \"gray\" },\n                    axisLabel: { fontSize: 20, padding: 30, fill: \"white\" },\n                    ticks: { stroke: \"white\", size: 5, },\n                    tickLabels: { fontSize: 15, padding: 5, fill: \"white\" }            \n                    }}\n                />\n\n                <VictoryAxis style={{\n                    axis: { stroke: \"white\" },\n                    grid: { stroke: \"transparent\" },\n                    axisLabel: { fontSize: 20, padding: 30, fill: \"white\" },\n                    ticks: { stroke: \"white\", size: 5, },\n                    tickLabels: { fontSize: 15, padding: 5, fill: \"white\" }\n                    }}\n                />\n                {data.map((dataset, index) => {\n                    return (\n                        <VictoryLine\n                            style={{\n                                data: {stroke: getColorVictoryLine(index)}\n                            }}\n                            key={Math.random()}\n                            data={dataset}\n                        />\n                    )\n                })}\n                </VictoryChart>\n                <Wrapper>\n                    {legend.map((label, index) => {\n                        return(\n                            <Label key={label + index} colorIndex={getColorVictoryLine(index)}>\n                                {label}\n                            </Label>\n                        )\n                    })}\n                </Wrapper>\n                <VictoryChart\n                    width={isMobile ? 350 : 700}\n                    height={90}\n                    scale={{x: \"time\"}}\n                    padding={{top: 0, left: 50, right: 50, bottom: 30}}\n                    containerComponent={\n                        <VictoryBrushContainer responsive={false}\n                        brushDimension=\"x\"\n                        brushDomain={brush}\n                        onBrushDomainChange={setZoom}\n                        />\n                    }\n                >\n                <VictoryAxis\n                    style={whiteStyleGrid}\n                    tickValues={!tickValues.length ? [\"2000\", \"2010\", \"2015\", \"2021\"] : tickValues}\n                    tickFormat={(x) => new Date(x).getFullYear()}\n                />\n                {data.map((dataset, index) => {\n                    return (\n                        <VictoryLine\n                            style={{\n                            data: {stroke: getColorVictoryLine(index)}\n                            }}\n                            key={Math.random()}\n                            data={dataset}\n                        />)\n                    })\n                }\n            </VictoryChart>\n        </div>\n    );\n}\n  ","export const getStocksByName = (input) => {\n    return fetch(`https://financialmodelingprep.com/api/v3/search-ticker?query=${input}&limit=10&exchange=NASDAQ&apikey=${process.env.REACT_APP_APIKEY}`)\n        .then(\n            (result) => result.json(),\n            (error) => { console.log(error) }\n        )\n}\n\nexport const getStocksHistory = (arrayOfStocksNames) => {\n    const stocks = arrayOfStocksNames.map(stock => stock.value).join(',')\n    return fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${stocks}?apikey=${process.env.REACT_APP_APIKEY}`)\n        .then(\n            (result) => result.json(),\n            (error) => { console.log(error) }\n        )\n}\n\nexport const getStockHistory = (name) => {\n    return fetch(`https://financialmodelingprep.com/api/v3/historical-price-full/${name}?apikey=${process.env.REACT_APP_APIKEY}`)\n        .then(\n            (result) => result.json(),\n            (error) => { console.log(error) }\n        )\n}\n","import styled from 'styled-components'\nimport React from 'react'\nimport AsyncSelect from 'react-select/async'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-self: center;\n    min-width: 30vw;\n\n`\nconst Label = styled.h1`\n    font-family: 'Fjalla One', sans-serif;    \n    color: ${props => props.alwaysDarkMode ? \"white\" : props.theme.text};\n`\n\nconst Subtitle = styled.h3`\n    font-family: Roboto;\n    color: ${props => props.alwaysDarkMode === true ? \"white\" : props.theme.text};\n    font-size: 1rem;\n`\n\nexport default function InputSelect ({ label, subtitle, search, onChange, isMultiSelect, alwaysDarkMode }) {\n    return (\n        <Wrapper>\n            <Label alwaysDarkMode={alwaysDarkMode}>{label}</Label>\n            <AsyncSelect isMulti={isMultiSelect} cacheOptions defaultOptions onChange={onChange} loadOptions={search} />\n            <Subtitle alwaysDarkMode={alwaysDarkMode}>{subtitle}</Subtitle>\n        </Wrapper>\n    )\n}\n\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Chart from '../chart/Chart'\nimport { isMobile } from 'react-device-detect';\nimport { getStocksByName, getStocksHistory } from '../../app/api'\nimport { mapObjectToChartData, mapArrayToChartDatas, yearsToDate } from '../../helpers/helpers'\nimport Select from '../select/Select'\n\nconst Wrapper = styled.div`\n    background-color: rgba(47,47,66,255);\n    display: flex;\n    flex-direction: ${isMobile ? \"column\" : \"row\"};\n    justify-content: center;\n    padding-bottom: 80px;\n`\n\n\nexport default function CompareStock() {\n    const [chartData, setChartData] = useState({ data: [], tickValues: [], legend: [] })\n\n    const searchByStockName = async (input) => {\n        const result = await getStocksByName(input);\n        return result.map(stock => { return { label: stock.symbol, value: stock.symbol }; });\n    }\n\n    const handleSearchChange = (inputValue) => {\n        populateChart(inputValue)\n    }\n\n    const populateChart = async (input) => {\n        if (!input.length) {\n            setChartData({ data: [], tickValues: [], legend: [] })\n            return\n        }\n        let stockHistory = await getStocksHistory(input)\n        const newChartData = stockHistory.historicalStockList ? mapArrayToChartDatas(stockHistory.historicalStockList) : mapObjectToChartData(stockHistory)\n        newChartData.tickValues = yearsToDate(newChartData.tickValues)\n        setChartData(newChartData)\n    }\n\n    return (\n        <Wrapper>\n            <Select label=\"Compare stocks history!\" subtitle=\"Select all the stocks you want to compare!\" search={searchByStockName} onChange={handleSearchChange} isMultiSelect={true} alwaysDarkMode={true} />\n            <Chart dataSet={ chartData } />\n        </Wrapper>\n    )\n\n}","import styled from 'styled-components'\nimport HomeIntroduction from '../../features/homeIntroduction/HomeIntroduction'\nimport CompareStock from '../../features/compareStock/CompareStock'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport default function Home() {\n    return (\n        <Wrapper>\n            <HomeIntroduction/>\n            <CompareStock/>\n        </Wrapper>\n    )\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    pending: {}\n}\n\nconst ordersSlice = createSlice({\n    name: 'orders',\n    initialState,\n    reducers: {\n        add: (state, { payload }) => {\n            if(state.pending[payload.label]) {\n                state.pending[payload.label] = {...state.pending[payload.label], date: new Date().toISOString().split('T')[0],  quantity: state.pending[payload.label].quantity + payload.quantity, price: (parseFloat(state.pending[payload.label].price) + parseFloat(payload.price)).toFixed(2)}\n            } else {\n                state.pending[payload.label] = {...payload, date: new Date().toISOString().split('T')[0]}\n            }\n        },\n        remove: (state, { payload }) => {\n            delete state.pending[payload.label]\n        },\n        edit: (state, { payload }) => {\n            state.pending[payload.label] = {...state.pending[payload.label], date: new Date().toISOString().split('T')[0],  quantity: payload.quantity, price: (parseFloat(state.pending[payload.label].unitPrice) * parseFloat(payload.quantity))}\n        }\n    }\n\n})\n\nexport const { add, remove, edit } = ordersSlice.actions;\nexport const selectPendingOrders = (state) => Array.from(Object.values(state.orders.pending))\n\nexport default ordersSlice.reducer;","export default __webpack_public_path__ + \"static/media/edit.83e85947.svg\";","import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const orderSuccess = () => toast(\"Order made!\");\nexport const orderEditSuccess = () => toast(\"Order edited!\");\nexport const orderQuantityFail = () => toast(\"You cannot buy more than 100 stocks!\", {role: \"alert\"});\nexport const orderPriceFail = () => toast(\"The price cannot be greater than 1 000 000$!\", {role: \"alert\"});\n\nexport default function Toast () {\n    return (\n        <ToastContainer position=\"top-center\"/>\n    )\n}","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { selectPendingOrders } from '../../pages/order/ordersSlice'\nimport { useSelector, useDispatch } from 'react-redux';\nimport EdiText from 'react-editext';\nimport EditIcon from '../../assets/icons/edit.svg'\nimport { edit } from '../../pages/order/ordersSlice';\nimport Toast, {orderEditSuccess} from '../toast/Toast'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    font-family: Roboto;\n    margin-bottom: 50px;\n`\nconst Title = styled.span`\n    margin-top: 10px;\n    color: white;\n    font-family: 'Fjalla One', sans-serif;    \n`\nconst HistoryWrapper = styled.span`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n`\n\nconst TableWrapper = styled.table`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin-top: 20px;\n`\n\nconst Header = styled.thead`\n`\n\nconst Body = styled.tbody`\n`\n\nconst TableRow = styled.tr`\n    display: flex;\n    margin-top: 20px;\n    text-align: center;\n`\n\nconst HeaderCol = styled.th`\n    font-family: Roboto;\n    font-family: 'Fjalla One', sans-serif;    \n    color: white;\n    width: 22%;\n`\n\nconst BodyCol = styled.td`\n    font-family: Roboto;\n    color: white;\n    width: 22%;\n`\nconst EditWrapper = styled.img`\n    transition: all 0.3s;\n    &:active{\n        transform: scale(0.7);\n    }\n`\n\nconst StyledEdiText = styled(EdiText)`\n    align-items: center;\n    button[editext=\"edit-button\"] {\n        color: #000;\n        width: 50px;\n        display: none;\n    }\n    input, textarea {\n        width: 50px;\n    }\n`\n\nexport default function OrderHistory() {\n    const [editing, setEditing] = useState(false)\n    let orderHistory = useSelector(selectPendingOrders)\n    const dispatch = useDispatch()\n    const onSave = (quantity, stock) => {\n            let newStock = {label: stock.label, quantity: quantity}\n            dispatch(edit(newStock))\n            if(quantity !== stock.quantity)orderEditSuccess()\n    }\n\n    return (\n        <Wrapper>\n            <Toast/>\n            <Title>Order History</Title>\n            <HistoryWrapper>\n            <TableWrapper>\n                <Header>\n                    <TableRow>\n                        <HeaderCol>Stock</HeaderCol>\n                        <HeaderCol>Quantity</HeaderCol>\n                        <HeaderCol>Price</HeaderCol>\n                        <HeaderCol>Date</HeaderCol>\n                        <HeaderCol>Edit</HeaderCol>\n                    </TableRow>\n                </Header>\n                <Body>\n                    {orderHistory.map(stock => \n                        <TableRow key={stock.label+stock.quantity}>\n                            <BodyCol key={stock.label}>{stock.label}</BodyCol>\n                            <BodyCol key={stock.quantity}>\n                                <StyledEdiText  \n                                    type=\"number\"\n                                    editing={editing} \n                                    onSave={(e) => onSave(e, stock)} \n                                    startEditingOnFocus \n                                    submitOnUnfocus \n                                    value={stock.quantity}\n                                    validation={val => val < 100 && val > 1}\n                                    validationMessage=\"Value must be between 1 and 100.\"\n                                />\n                                </BodyCol>\n                            <BodyCol key={stock.price}>{parseFloat(stock.price).toFixed(2)}$</BodyCol>\n                            <BodyCol key={stock.date}>{stock.date}</BodyCol>\n                            <BodyCol key={Math.random()}><EditWrapper onClick={() => setEditing(e => !e)} src={EditIcon}/></BodyCol>\n                        </TableRow>\n                    )} \n                </Body>\n            </TableWrapper>\n            </HistoryWrapper>\n        </Wrapper>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\nimport Slider from 'react-smooth-range-input';\nimport { isMobile } from 'react-device-detect';\nimport Select from '../select/Select'\nimport { getStocksByName, getStockHistory } from '../../app/api'\nimport { mapObjectToChartData, yearsToDate } from '../../helpers/helpers'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: ${isMobile ? 'column' : 'row'};;\n    justify-content: space-around;\n    align-items: center;\n    padding-bottom: 30px;\n    width: ${isMobile ? '100%' : '50%'};\n`\nconst StockWrapper = styled.div`\n    display: flex;\n    flex-direction: ${isMobile ? 'column' : 'column'};\n`\n\nconst Label = styled.span`\n    font-family: Roboto;\n    color: ${props => props.theme.text};\n    margin-top: 5px;\n    margin-bottom: 5px;\n`\n\nexport default function SelectStockToOrder({ onSelect, stockToOrder, quantity, setQuantityToOrder }) {\n\n    const searchByStockName = async (input) => {\n        const result = await getStocksByName(input);\n        return result.map(stock => { return { label: stock.symbol, value: stock.symbol }; });\n    }\n\n    const handleSearchChange = (inputValue) => {\n        populateChart(inputValue)\n    }\n\n    const populateChart = async (input) => {\n        if (!input) {\n            onSelect({ data: [], tickValues: [], legend: [] })\n            return\n        }\n        const stockHistory = await getStockHistory(input.value)\n        const newChartData = mapObjectToChartData(stockHistory)\n        newChartData.tickValues = yearsToDate(newChartData.tickValues)\n        onSelect(newChartData)\n        setStockToOrder(stockHistory)\n    }\n\n    const setStockToOrder = (stock) => {\n        stockToOrder({ label: stock.symbol, lastDay: stock.historical[0] })\n    }\n\n    return (\n        <Wrapper>\n            <StockWrapper>\n                <Select label=\"Stock to buy\" subtitle=\"Buy with the last close price\" search={searchByStockName} onChange={handleSearchChange} isMultiSelect={false} alwaysDarkMode={false} />\n                <Slider min={1} max={100} value={quantity} onChange={setQuantityToOrder} />\n                <Label>Number of stocks</Label>\n            </StockWrapper>\n        </Wrapper>\n    )\n\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { isMobile } from 'react-device-detect';\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: ${isMobile ? '100%' : '50%'};\n    margin-top: 20px;\n    margin-bottom: 30px;\n`\n\nconst Title = styled.span`\n    font-family: 'Fjalla One', sans-serif;    \n    color: ${ props => props.theme.text };\n    font-size: 2rem;\n`\n\nconst StockName = styled.span`\n    font-family: 'Fjalla One', sans-serif;    \n    color: rgba(245,0,87,255);\n`\n\nconst Row = styled.div`\n    display: flex;\n    flex-direction: column;\n    color: ${ props => props.theme.text };\n`\nconst Col = styled.div`\n    display: flex;\n    margin-right: 6px;\n`\n\nconst StatisticsWrapper = styled.span`\n    margin-top: 10px;\n`\n\nconst Category = styled.span`\n    font-family: Roboto;\n    display: flex;\n    flex-direction: row;\n    color: ${ props => props.theme.text };\n`\n\nconst Label = styled.span`\n    font-family: 'Fjalla One', sans-serif;    \n    font-weight: 900;\n    color: ${ props => props.theme.text };\n`\n\nconst Data = styled.span`\n    font-family: Roboto;\n    color: ${ props => props.theme.text };\n    margin-left: 6px;\n`\n\nconst Change = styled.span`\n    font-family: Roboto;\n    color: ${props => props.change ? 'green' : 'red'};\n    font-size: 0.7rem;\n    margin-left: 5px;\n`\n\nconst BuyButton = styled.input`\n    background: #ec5990;\n    background: #ec5990;\n    color: white;\n    text-transform: uppercase;\n    border: none;\n    border-radius: 10px;\n    margin-top: 10px;\n    padding: 20px;\n    font-size: 16px;\n    font-weight: 100;\n    letter-spacing: 10px;\n    min-width: 200px;\n    transition: all 0.2s;\n    &:active {\n        background: #bf1650;\n        cursor: pointer;\n    }\n`\n\n\nexport default function MakeOrder({ stockToOrder, quantityToOrder, makeOrder }) {\n    return (\n        <Wrapper>\n            <Row>\n                <Title>Stock to Order: <StockName>{stockToOrder ? stockToOrder.name : ''}</StockName></Title>\n                <Data>Close statistics:</Data>\n            </Row>\n            {stockToOrder ? \n            <StatisticsWrapper>\n                <Category>\n                    <Col>\n                        <Label>low: </Label>\n                        <Data>{stockToOrder.lastDay.low}$</Data>\n                    </Col>\n                    <Label>High: </Label>\n                    <Data>{stockToOrder.lastDay.high}$</Data>\n                </Category>\n                <Category>\n                    <Label>Closing Price: </Label>\n                        <Data>{stockToOrder.lastDay.close}$</Data>\n                        <Change change={stockToOrder.lastDay.change > 0}>{stockToOrder.lastDay.changePercent > 0 ? '+' : '-'}{stockToOrder.lastDay.changePercent}%</Change>\n                </Category>\n                <Category>\n                    <Label>Quantity: </Label>\n                    <Data>{quantityToOrder}</Data>\n                </Category>\n                <Category>\n                    <Label>Order price: </Label>\n                    <Data>{(stockToOrder.lastDay.close * quantityToOrder).toFixed(2)}$</Data>\n                </Category>\n                <BuyButton type=\"submit\" value=\"buy\" onClick={() => makeOrder(stockToOrder)}/>\n            </StatisticsWrapper>\n            : ''}\n        </Wrapper>\n    )\n}","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Chart from '../../features/chart/Chart'\nimport OrderHistory from '../../features/orderHistory/OrderHistory'\nimport SelectStockToOrder from '../../features/selectStockToOrder/SelectStockToOrder'\nimport MakeOrder from '../../features/makeOrder/MakeOrder'\nimport { isMobile } from 'react-device-detect';\nimport Toast, {orderSuccess, orderQuantityFail, orderPriceFail} from '../../features/toast/Toast'\nimport { useDispatch } from 'react-redux';\nimport { add } from './ordersSlice'\n\nconst Wrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    height: 100vh;\n`\nconst ChartWrapper = styled.div`\n    display: flex;\n    flex-direction: ${isMobile ? 'column' : 'row'};\n    height: 100%;\n    background-color: rgba(47,47,66,255);\n`\n\nconst OrderWrapping = styled.div`\n    display: flex;\n    flex-direction: ${isMobile ? 'column' : 'row'};\n`\n\nexport default function BuyStock() {\n    const [stockToOrder, setStockToOrder] = useState(null)\n    const [chartData, setChartData] = useState({ data: [], tickValues: [], legend: [] })\n    const [quantityToOrder, setQuantityToOrder] = useState(1)\n    const dispatch = useDispatch()\n\n    const orderStockCallback = (stock) => {\n        if(!stock) return\n        const price = (quantityToOrder * stock.lastDay.close).toFixed(2)\n        if(price > 1000000) {\n            orderPriceFail()\n            return \n        }\n        if(quantityToOrder < 1 || quantityToOrder > 100) {\n            orderQuantityFail() \n            return\n        }\n        const stockToOrder = {label: stock.label, quantity: quantityToOrder, price: price, unitPrice: stock.lastDay.close}\n        dispatch(add(stockToOrder))\n        orderSuccess()\n    }\n\n    return (\n        <Wrapper>\n            <Toast/>\n            <OrderWrapping>\n                <SelectStockToOrder onSelect={setChartData} stockToOrder={setStockToOrder} quantity={quantityToOrder} setQuantityToOrder={setQuantityToOrder}/>\n                <MakeOrder stockToOrder={stockToOrder} quantityToOrder={quantityToOrder} makeOrder={orderStockCallback}/>\n            </OrderWrapping>\n            <ChartWrapper>\n                <Chart dataSet={chartData} />\n                <OrderHistory/>\n            </ChartWrapper>\n        </Wrapper>\n    )\n}","import styled from 'styled-components'\n\nconst Wrapper = styled.div`\n    display: flex;\n    height: 80vh;\n    margin-left: auto;\n    margin-right: auto;\n    align-items: center;\n    color: ${props => props.theme.text}\n`\nconst Text = styled.span`\n    font-size: 6rem;\n`\n\nexport default function NotFound(){\n\n    return(\n        <Wrapper><Text>404: not found</Text></Wrapper>\n    )\n}","export default __webpack_public_path__ + \"static/media/logo.b02bb151.svg\";","export default __webpack_public_path__ + \"static/media/avatar.37635aba.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst SwitchInput = styled.input`\n  height: 0;\n  width: 0;\n  visibility: hidden;\n`;\n\nconst SwitchLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  width: 50px;\n  height: 25px;\n  border-radius: 100px;\n  border: 2px solid gray;\n  position: relative;\n  transition: background-color 0.2s;\n  margin-right: 10px;\n`;\n\nconst SwitchButton = styled.span`\n  content: \"\";\n  position: absolute;\n  top: 2px;\n  left: 2px;\n  width: 21px;\n  height: 21px;\n  border-radius: 45px;\n  transition: 0.2s;\n  background: rgba(245,0,87,255);\n  box-shadow: 0 0 2px 0 rgba(10, 10, 10, 0.29);\n  ${SwitchInput}:checked + ${SwitchLabel} & {\n    left: calc(100% - 2px);\n    transform: translateX(-100%);\n  }\n\n  ${SwitchLabel}:active & {\n    width: 45px;\n  }\n`;\n\nexport default function Switch({ id, toggled, onChange }) {\n  return (\n    <>\n      <SwitchInput\n        className=\"switch-checkbox\"\n        id={id}\n        type=\"checkbox\"\n        checked={toggled}\n        onChange={onChange}\n      />\n      <SwitchLabel className=\"switch-label\" htmlFor={id}>\n        <SwitchButton className=\"switch-button\" />\n      </SwitchLabel>\n    </>\n  );\n};\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    isToggled: false\n}\n\nconst switchDarkModeSlice = createSlice({\n    name: 'switchDarkMode',\n    initialState,\n    reducers: {\n        toggle: (state) => {\n            state.isToggled = !state.isToggled\n        }\n    }\n\n})\n\nexport const { toggle } = switchDarkModeSlice.actions;\nexport const selectIsToggled = (state) => state.switchDarkMode.isToggled\n\nexport default switchDarkModeSlice.reducer;","import Switch from '../switch/Switch'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectIsToggled, toggle } from './switchDarkModeSlice';\n  \n\nexport default function SwitchDarkMode() {\n    const isToggled = useSelector(selectIsToggled)\n    const dispatch = useDispatch()\n\n    return (\n        <Switch id=\"toggle-dark-mode\" checked={isToggled} onChange={() => dispatch(toggle())}/>\n    )\n}","\nimport styled from 'styled-components';\nimport React from 'react';\nimport { bool, func } from 'prop-types';\n\nconst StyledBurger = styled.button`\n  width: 100%;\n  margin-left: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 2rem;\n  height: 2rem;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 10;\n  span {\n    width: 2rem;\n    height: 0.25rem;\n    background: linear-gradient(45deg, rgba(231,0,138,1) 0%, rgba(255,0,58,1) 100%);\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`;\n\nexport default function Burger({ open, setOpen, ...props }) {\n  \n    const isExpanded = open ? true : false;\n    \n    return (\n      <StyledBurger aria-label=\"Toggle menu\" aria-expanded={isExpanded} open={open} onClick={() => setOpen(!open)} {...props}>\n        <span />\n        <span />\n        <span />\n      </StyledBurger>\n    )\n  }\n  \n  Burger.propTypes = {\n    open: bool.isRequired,\n    setOpen: func.isRequired,\n  };\n  \n","import styled from 'styled-components';\nimport React from 'react';\nimport { bool } from 'prop-types';\nimport { Link } from 'react-router-dom'\nimport SwitchDarkMode from '../toggle/switchDarkMode/SwitchDarkMode'\nimport avatar from '../../assets/avatar.png'\n\n\nexport const StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  background: ${({ theme }) => theme.burgerMenu};\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(-100%)'};\n  height: 100vh;\n  text-align: left;\n  padding: 2rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n  @media (max-width: ${({ theme }) => theme.mobile}) {\n      width: 40%;\n    }\n  a {\n    font-size: 2rem;\n    text-transform: uppercase;\n    padding: 2rem 0;\n    font-weight: bold;\n    letter-spacing: 0.5rem;\n    color: ${({ theme }) => theme.text};\n    text-decoration: none;\n    transition: color 0.3s linear;\n    @media (max-width: ${({ theme }) => theme.mobile}) {\n      font-size: 1.5rem;\n      text-align: center;\n    }\n    &:hover {\n      color: ${({ theme }) => theme.primaryHover};\n    }\n  }\n`\n\nconst Avatar = styled.img`\n    height: 40px;\n    width: 40px;\n    object-fit: contain;\n    border-radius: 50%;\n    margin-right: 20px;\n    margin-bottom: 20px;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nconst Text = styled.div`\n    font-weight: 200;\n    font-size: 1.5rem;\n    text-decoration: none;\n    color: ${ props => props.theme.text };\n    margin-right: 20px;\n    font-family: 'Fjalla One', sans-serif;\n    margin-bottom: 20px;\n`\n\nconst TextHover = styled.span`\n    &:hover {\n        background: linear-gradient(45deg, rgba(231,0,138,1) 0%, rgba(255,0,58,1) 100%);\n        background-clip: text;\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n`\n\nconst Menu = ({ open, setOpen, ...props }) => {\n  \n    const isHidden = open ? true : false;  \n    return (\n      <StyledMenu open={open} aria-hidden={!isHidden} {...props}>\n        <Text>\n          <Link to='/' onClick={() => setOpen(false)}><TextHover>HOME</TextHover></Link>\n        </Text>\n        <Text>\n          <Link to='buy' onClick={() => setOpen(false)}><TextHover>BUY</TextHover></Link>\n        </Text>\n        <Avatar src={avatar}></Avatar>\n        <SwitchDarkMode/>\n      </StyledMenu>\n    )\n  }\n  \n  Menu.propTypes = {\n    open: bool.isRequired,\n  }\n  \n  export default Menu;\n  ","import { useRef, useState } from 'react';\nimport styled from 'styled-components'\nimport logo from '../../assets/logo.svg'\nimport avatar from '../../assets/avatar.png'\nimport {isMobile} from 'react-device-detect';\nimport SwitchDarkMode from '../toggle/switchDarkMode/SwitchDarkMode'\nimport { Link } from 'react-router-dom'\nimport Burger from '../burger/Burger'\nimport Menu from '../menu/Menu'\nimport { useOnClickOutside } from '../../helpers/hooks';\n\nconst Wrapper = styled.nav`\n    width: 100vw;\n    height: 70px;\n    background-color: ${ props => props.theme.navbarColor };\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    border-bottom: 1px solid ${ props => props.theme.navbarBorder };\n`\nconst Logo = styled.img`\n    height: auto;\n    width: 15rem;\n`\n\nconst Buy = styled.div`\n    font-weight: 200;\n    font-size: 1.5rem;\n    text-decoration: none;\n    color: ${ props => props.theme.text };;\n    margin-left: auto;\n    margin-right: 20px;\n    font-family: 'Fjalla One', sans-serif;    \n`\n\nconst TextHover = styled.span`\n    &:hover {\n        background: linear-gradient(45deg, rgba(231,0,138,1) 0%, rgba(255,0,58,1) 100%);\n        background-clip: text;\n        -webkit-background-clip: text;\n        -webkit-text-fill-color: transparent;\n    }\n`\nconst BurgerWrapper = styled.div`\n    display: flex;\n    width: 100%;\n    flex-direction: row-reverse;\n    margin-right: 30px;\n    z-index: 99;\n`\n\nconst Avatar = styled.img`\n    height: 40px;\n    width: 40px;\n    object-fit: contain;\n    border-radius: 50%;\n    margin-right: 20px;\n    &:hover {\n        cursor: pointer;\n    }\n`\n\nexport default function Navbar() {\n    const [open, setOpen] = useState(false);\n    const node = useRef();\n  \n    useOnClickOutside(node, () => setOpen(false));\n\n    const mobileMenu = () => {\n        if(isMobile) {\n            return (\n                <BurgerWrapper ref={node}>\n                        <Burger open={open} setOpen={setOpen} />\n                        <Menu open={open} setOpen={setOpen} />\n                </BurgerWrapper>\n            )\n        }\n        return (\n            <>\n            <Buy><Link to='buy'><TextHover>BUY</TextHover></Link></Buy>\n            <Avatar src={avatar}></Avatar>\n            <SwitchDarkMode/>\n            </>\n        )\n    }\n    return (\n    <Wrapper>\n       <Link to='/'><Logo src={logo}/></Link>\n       { mobileMenu() }\n    </Wrapper>\n    )\n}\n","import { useEffect } from 'react';\n\nexport const useOnClickOutside = (ref, handler) => {\n  useEffect(() => {\n    const listener = event => {\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener('mousedown', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n    };\n  },\n  [ref, handler],\n  );\n};","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from './pages/home/Home'\nimport Order from './pages/order/Order'\nimport NotFound from './pages/notFound/NotFound'\nimport Navbar from './features/navbar/Navbar'\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { ThemeProvider } from \"styled-components\"\nimport { lightTheme, darkTheme } from './helpers/themes'\nimport { useSelector } from 'react-redux';\nimport { selectIsToggled } from './features/toggle/switchDarkMode/switchDarkModeSlice';\n\n\nconst GlobalStyle = createGlobalStyle`\n  body, html  {\n    background-color: ${ props => props.theme.background };\n    transition: background-color 200ms linear;\n    height:100vh;\n    width: 100vw;\n    margin: 0;\n  }\n\n  a {\n    text-decoration: none;\n    color: ${ props => props.theme.text }\n  }\n\n\n  .responsive-table {\n    li {\n      border-radius: 3px;\n      padding: 25px 30px;\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 25px;\n    }\n    .table-header {\n      background-color: #95a5a6;\n      font-size: 14px;\n      text-transform: uppercase;\n      letter-spacing: 0.03em;\n    }\n    .table-row {\n      background-color: #ffffff;\n      box-shadow: 0px 0px 9px 0px rgba(0, 0, 0, 0.1);\n    }\n    .col-1 {\n      flex-basis: 10%;\n    }\n    .col-2 {\n      flex-basis: 40%;\n    }\n    .col-3 {\n      flex-basis: 25%;\n    }\n    .col-4 {\n      flex-basis: 25%;\n    }\n\n    @media all and (max-width: 767px) {\n      .table-header {\n        display: none;\n      }\n      .table-row {\n      }\n      li {\n        display: block;\n      }\n      .col {\n        flex-basis: 100%;\n      }\n      .col {\n        display: flex;\n        padding: 10px 0;\n        &:before {\n          color: #6c7a89;\n          padding-right: 10px;\n          content: attr(data-label);\n          flex-basis: 50%;\n          text-align: right;\n        }\n      }\n    }\n  }\n\n\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nfunction App() {\n  const isToggled = useSelector(selectIsToggled)\n  return (\n    <ThemeProvider theme={isToggled ? darkTheme : lightTheme}>\n      <Wrapper>\n        <GlobalStyle/>\n        <Router>\n        <Navbar/>\n          <Switch>\n              <Route exact path=\"/\">\n                <Home/>\n              </Route>\n              <Route path=\"/buy\">\n                <Order/>\n              </Route>\n              <Route component={NotFound}/>\n          </Switch>\n        </Router>\n      </Wrapper>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport switchDarkModeReducer from '../features/toggle/switchDarkMode/switchDarkModeSlice'\nimport ordersReducer from '../pages/order/ordersSlice'\n\nexport const store = configureStore({\n  reducer: {\n    switchDarkMode: switchDarkModeReducer,\n    orders: ordersReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}